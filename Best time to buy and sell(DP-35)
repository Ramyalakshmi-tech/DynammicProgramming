https://leetcode.com/problems/best-time-to-buy-and-sell-stock/
//Recursion
class Solution {
    int profit=0;
    public int maxProfit(int[] prices) {
        int res=0;
    for(int i=0;i<prices.length;i++){
            System.out.println("res "+res);
          res=Math.max(res,maxProfitRecur(prices,i,i));
          profit=Integer.MIN_VALUE;
        }
        return res;
    }

    public int maxProfitRecur(int[] prices,int i,int j){
        System.out.println("Profit "+profit);
            if(j<prices.length){
                profit=Math.max(profit,prices[j]-prices[i]);
            }
            if(j>=prices.length){
                return profit;
            }
            maxProfitRecur(prices,i,j+1);
            return profit;

    }
}
//optimised version
class Solution {
   
    public int maxProfit(int[] prices) {
                return maxProfitRecur(prices,0,Integer.MAX_VALUE,0);
        }

    public int maxProfitRecur(int[] prices,int i,int minBuy,int maxProfit){
            if(i==prices.length){
                return maxProfit;
            }

             minBuy=Math.min(minBuy,prices[i]);
            maxProfit=Math.max(maxProfit,prices[i]-minBuy);

            return maxProfitRecur(prices,i+1,minBuy,maxProfit);
    }
}
