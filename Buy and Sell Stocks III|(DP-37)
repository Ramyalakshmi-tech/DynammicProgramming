https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/
//Recursion
class Solution {
    public int maxProfit(int[] prices) {
      return  Helper(prices,0,false,2);
    }

    public int Helper(int[] prices,int day,boolean hasStock,int i){
        if(day>=prices.length || i==0){
            return 0;
        }
        int profit=0;
        if(hasStock){
            int sell=prices[day]+Helper(prices,day+1,false,i-1);
            int skip=Helper(prices,day+1,true,i);
            profit=Math.max(sell,skip);
        }
        else{
            int buy=-prices[day]+Helper(prices,day+1,true,i);
            int skip=Helper(prices,day+1,false,i);
            profit=Math.max(buy,skip);
        }
        return profit;
    } 
}
