https://leetcode.com/problems/longest-increasing-subsequence/
//Recursion
class Solution {
    public int lengthOfLIS(int[] nums) {
        List<Integer> list=new ArrayList<>();
         return Helper(nums,0,list);
    }

    public int Helper(int[] nums,int i,List<Integer> list){
        if(i==nums.length){
          return list.size();
        }
       int take=0;
        if(list.isEmpty() || list.get(list.size()-1)<nums[i]) {
                list.add(nums[i]);
            take= Helper(nums,i+1,list);
             list.remove(list.size()-1);
        }
        int skip=Helper(nums,i+1,list);
        return Math.max(skip,take);
    }
}
