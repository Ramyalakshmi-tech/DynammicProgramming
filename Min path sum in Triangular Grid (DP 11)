https://leetcode.com/problems/triangle/description/

//memoization

class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        int n=triangle.size();
        int[][] mem=new int[n][n];
        for(int i=0;i<n;i++){
            Arrays.fill(mem[i],-1);
        }
       int res= minimumTotalRecur(triangle,n,0,0,mem);
       return res;
    }

    public int minimumTotalRecur(List<List<Integer>> triangle,int n,int i,int j,int[][] mem){
        if(i==n-1){
            return triangle.get(i).get(j);
        }
        if( mem[i][j]!=-1){
            return mem[i][j];
        }
        int next=minimumTotalRecur(triangle,n,i+1,j,mem);
        int Diagnol=minimumTotalRecur(triangle,n,i+1,j+1,mem);
        mem[i][j]=triangle.get(i).get(j)+Math.min(next,Diagnol);
        return  mem[i][j];

    }
}


