https://leetcode.com/problems/unique-paths-ii/description/

class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int m=obstacleGrid.length;
        int n=obstacleGrid[0].length;
        if(obstacleGrid[0][0]==1 || obstacleGrid[m-1][n-1]==1){
            return 0;
        }
        int[][] mem=new int[m][n];
        for(int i=0;i<m;i++)
        Arrays.fill(mem[i],-1);
       int res= uniquePathRecur(obstacleGrid,m,n,0,0,mem);
        return res;
    }

    public int uniquePathRecur(int[][] grid,int m,int n,int x,int y,int[][] mem){
            if(x==m-1 && y==n-1){
              return 1;
            }

            if(x>=m || y>=n){
                return 0;
            }
            
            if(grid[x][y]==1){
                return 0;
            }
            if(mem[x][y]!=-1){
                return mem[x][y];
            }

         int down= uniquePathRecur(grid,m,n,x+1,y,mem);
          int up=  uniquePathRecur(grid,m,n,x,y+1,mem);
          mem[x][y]=down+up;
            return mem[x][y];
    }
}
