https://www.geeksforgeeks.org/problems/printing-longest-increasing-subsequence/1

//Recursion


class Solution {
    public ArrayList<Integer> longestIncreasingSubsequence(int n, int arr[]) {
        // Code here
           ArrayList<Integer> list=new ArrayList<>();
           ArrayList<Integer> res=new ArrayList<>();
            longSubSequenceRecur(arr,0,list,res);
            return res;
    }

    public void  longSubSequenceRecur(int[] nums,int i,ArrayList<Integer> list,ArrayList<Integer> res){
        if(i==nums.length){
          if( list.size()>res.size()){
              res.clear();
              res.addAll(list);
          }
          return;
        }
     
        if(list.isEmpty() || list.get(list.size()-1)<nums[i]) {
                list.add(nums[i]);
            longSubSequenceRecur(nums,i+1,list,res);
             list.remove(list.size()-1);
        }
        longSubSequenceRecur(nums,i+1,list,res);
        
    }
}
